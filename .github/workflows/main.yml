name: Deploy to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    
    # 1. Récupérer le code source
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configurer la connexion SSH
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # 3. Supprimer complètement les paquets EFI problématiques
    - name: Fix grub-efi Issues
      run: |
        ssh -o StrictHostKeyChecking=no root@194.164.72.129 << 'EOF'
          set -e

          # Arrêter les processus en attente
          dpkg --configure -a || true
          apt-get install -f -y || true

          # Supprimer les paquets EFI problématiques
          DEBIAN_FRONTEND=noninteractive apt remove --purge -y \
            grub-efi-amd64-signed \
            shim-signed \
            grub-efi \
            grub-pc

          # Bloquer ces paquets pour empêcher leur réinstallation
          apt-mark hold grub-efi-amd64-signed shim-signed grub-efi grub-pc

          # Nettoyage du système
          apt autoremove -y
          apt clean
        EOF

    # 4. Préparer le répertoire du projet sur le VPS
    - name: Prepare Project Directory
      run: |
        ssh -o StrictHostKeyChecking=no root@194.164.72.129 << 'EOF'
          set -e
          apt update && apt install -y curl
          curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
          apt install -y nodejs
          npm install -g pm2

          # Nettoyer l'ancien projet et préparer le nouveau
          rm -rf /var/www/nextjs-app
          mkdir -p /var/www/nextjs-app
        EOF

    # 5. Synchroniser les fichiers avec rsync
    - name: Sync Files to VPS
      run: |
        rsync -avz --exclude='.git' --exclude='node_modules' ./ root@194.164.72.129:/var/www/nextjs-app/

    # 6. Transférer les variables d'environnement (.env)
    - name: Transfer Environment Variables
      run: |
        echo "EMAIL_USER=${{ secrets.EMAIL_USER }}" > .env
        echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env
        echo "EMAIL_RECIPIENT=${{ secrets.EMAIL_RECIPIENT }}" >> .env

        rsync -avz .env root@194.164.72.129:/var/www/nextjs-app/.env

    # 7. Installer les dépendances et démarrer l'application avec PM2
    - name: Install Dependencies and Start App
      run: |
        ssh -o StrictHostKeyChecking=no root@194.164.72.129 << 'EOF'
          set -e
          cd /var/www/nextjs-app
          npm ci
          npm run build

          # Démarrer ou recharger proprement avec PM2
          pm2 startOrReload ecosystem.config.js --env production || pm2 start npm --name "nextjs-app" -- start
          pm2 save
        EOF
